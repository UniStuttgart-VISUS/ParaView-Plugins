<ServerManagerConfiguration>
    <ProxyGroup name="filters">
        <!--

        Attachment and separation lines.

        Extract the attachment and separation lines on two-dimensional surfaces.

        -->
        <SourceProxy name="AttachmentAndSeparationLines" class="attachment_separation_lines" label="Attachment/Separation lines">
            <Documentation>
                Extract the attachment and separation lines on two-dimensional surfaces.
            </Documentation>

            <InputProperty name="Surface mesh" command="SetInputConnection" port_index="0">
                <ProxyGroupDomain name="groups">
                    <Group name="sources"/>
                    <Group name="filters"/>
                </ProxyGroupDomain>
                <DataTypeDomain name="input_type">
                    <DataType value="vtkPolyData"/>
                </DataTypeDomain>
                <InputArrayDomain attribute_type="point" name="normal_array" number_of_components="3"/>
                <InputArrayDomain attribute_type="point" name="velocity_array" number_of_components="3"/>
                <InputArrayDomain attribute_type="point" name="jacobian_array" number_of_components="9"/>
                <Documentation>
                    Surface mesh providing the normals, velocities and Jacobian matrices.
                </Documentation>
            </InputProperty>

            <StringVectorProperty name="Normal" label="Normal" command="SetInputArrayToProcess" number_of_elements="5" element_types="0 0 0 0 2" animateable="0" default_values="0">
                <ArrayListDomain name="array_list" attribute_type="Vectors" input_domain_name="normal_array">
                    <RequiredProperties>
                        <Property name="Surface mesh" function="Input" />
                    </RequiredProperties>
                </ArrayListDomain>
                <Documentation>
                    Surface normals defined at the vertices.
                </Documentation>
            </StringVectorProperty>
            <StringVectorProperty name="Velocity" label="Velocity" command="SetInputArrayToProcess" number_of_elements="5" element_types="0 0 0 0 2" animateable="0" default_values="1">
                <ArrayListDomain name="array_list" attribute_type="Vectors" input_domain_name="velocity_array">
                    <RequiredProperties>
                        <Property name="Surface mesh" function="Input" />
                    </RequiredProperties>
                </ArrayListDomain>
                <Documentation>
                    Three-dimensional velocities defined at the vertices.
                </Documentation>
            </StringVectorProperty>
            <StringVectorProperty name="Jacobian" label="Jacobian" command="SetInputArrayToProcess" number_of_elements="5" element_types="0 0 0 0 2" animateable="0" default_values="2">
                <ArrayListDomain name="array_list" attribute_type="Vectors" input_domain_name="jacobian_array">
                    <RequiredProperties>
                        <Property name="Surface mesh" function="Input" />
                    </RequiredProperties>
                </ArrayListDomain>
                <Documentation>
                    Three-dimensional Jacobian matrices defined at the vertices.
                </Documentation>
            </StringVectorProperty>

            <Hints>
                <ShowInMenu category="VISUS Topology"/>
            </Hints>
        </SourceProxy>

        <!--

        Filter lines.

        Filter for topological lines, such as attachment and separation lines.

        -->
        <SourceProxy name="FilterLines" class="filter_lines" label="Filter lines">
            <Documentation>
                Filter for topological lines, such as attachment and separation lines.
            </Documentation>

            <InputProperty name="Lines" command="SetInputConnection" port_index="0">
                <ProxyGroupDomain name="groups">
                    <Group name="sources"/>
                    <Group name="filters"/>
                </ProxyGroupDomain>
                <DataTypeDomain name="input_type">
                    <DataType value="vtkPolyData"/>
                </DataTypeDomain>
                <Documentation>
                    Topological lines, e.g., attachment and separation lines.
                </Documentation>
            </InputProperty>

            <IntVectorProperty name="AngleFilter" label="Angle filter" command="SetAngleFilter" number_of_elements="1" default_values="0">
                <BooleanDomain name="bool"/>
                <Documentation>
                    Filter for angle between the line segments and a vector from a specified attribute.
                </Documentation>
            </IntVectorProperty>
            <DoubleVectorProperty name="MaxAngle" label="Maximum angle" command="SetMaxAngle" number_of_elements="1" default_values="45.0">
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="AngleFilter" value="1" />
                </Hints>
                <Documentation>
                    Maximum angle for which the segments are still valid.
                </Documentation>
            </DoubleVectorProperty>
            <StringVectorProperty name="AngleVector" label="Vector for angle" command="SetInputArrayToProcess" number_of_elements="5" element_types="0 0 0 0 2" animateable="0" default_values="0">
                <InputArrayDomain attribute_type="point" name="vector_array" number_of_components="3"/>
                <ArrayListDomain name="array_list" attribute_type="Vectors" input_domain_name="vector_array">
                    <RequiredProperties>
                        <Property name="Lines" function="Input" />
                    </RequiredProperties>
                </ArrayListDomain>
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="AngleFilter" value="1" />
                </Hints>
                <Documentation>
                    The angle is calculated between this vector and the line segment's orientation.
                </Documentation>
            </StringVectorProperty>

            <IntVectorProperty name="SizeFilter" label="Size filter" command="SetSizeFilter" number_of_elements="1" default_values="1">
                <BooleanDomain name="bool"/>
                <Documentation>
                    Filter for removing polylines with only few segments.
                </Documentation>
            </IntVectorProperty>
            <IntVectorProperty name="MinSize" label="Minimum number of segments" command="SetMinSize" number_of_elements="1" default_values="5">
                <Hints>
                    <PropertyWidgetDecorator type="GenericDecorator" mode="visibility" property="SizeFilter" value="1" />
                </Hints>
                <Documentation>
                    Minimum number of segments needed for a polyline to not get removed.
                </Documentation>
            </IntVectorProperty>

            <PropertyGroup label="Angle">
                <Property name="AngleFilter" />
                <Property name="MaxAngle" />
                <Property name="AngleVector" />
            </PropertyGroup>

            <PropertyGroup label="Size">
                <Property name="SizeFilter" />
                <Property name="MinSize" />
            </PropertyGroup>

            <Hints>
                <ShowInMenu category="VISUS Topology"/>
            </Hints>
        </SourceProxy>
    </ProxyGroup>
</ServerManagerConfiguration>
